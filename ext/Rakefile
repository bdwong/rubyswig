require 'fileutils'
require 'parallel'

puts "Rakefile is being processed."

SWIG_VERSION='2.0.7'
PCRE_VERSION='8.30'
PROJECT_ROOT=File.expand_path(File.join(File.dirname(__FILE__), '..'))
EXT_ROOT=File.expand_path(File.dirname(__FILE__))
PWD=FileUtils.pwd
GEMDIR=`gem env gemdir`.chomp
GEM_CACHE_DIR=File.join(GEMDIR, 'cache')

module Kernel
  def system!(*args)
    system(*args)
    return_code=$?
    if return_code != 0 then
      raise RuntimeError.new("Failed to run #{args}. Return code: #{return_code}")
    end
  end
end

task :default => [:build_swig]

# Detect existing pcre library.
def pcre_installed?
  system "gcc -c #{EXT_ROOT}/findpcre.c -o /dev/null"
  $? == 0
end

# Download and build local version of pcre.
def install_pcre
  pcre_filename="pcre-#{PCRE_VERSION}.tar.gz"
  pcre_download_path=File.join(GEM_CACHE_DIR, pcre_filename)

  FileUtils.chdir(File.join(EXT_ROOT, "swig-#{SWIG_VERSION}"))
  if not File.exists?(pcre_download_path) then
    system! "wget -P #{GEM_CACHE_DIR} http://sourceforge.net/projects/pcre/files/pcre/#{PCRE_VERSION}/#{pcre_filename}"
  end
  FileUtils.ln_s(pcre_download_path, pcre_filename)
  system! 'Tools/pcre-build.sh'
end

def install_manpages(dest)
  begin
    FileUtils.chdir(PROJECT_ROOT)
    Dir.glob(File.join('share', 'man', '**', '*')).each do |file|
      dest_file = File.join(dest, file)
      FileUtils.mkdir_p(File.dirname(file))
      FileUtils.rm(dest_file) if File.symlink?(dest_file) and not File.exists?(dest_file)
      FileUtils.ln_s(File.expand_path(file), dest_file)
    end
  rescue => e
  #rescue permissions error
    puts "Rescuing #{e.class}"
    puts e.inspect
    raise
  end
end

def build_swig
  swig_filename="swig-#{SWIG_VERSION}.tar.gz"
  swig_download_path=File.join(GEM_CACHE_DIR, swig_filename)

  FileUtils.chdir(EXT_ROOT)
  if not File.exists?(swig_download_path) then
    system! "wget -P #{GEM_CACHE_DIR} http://downloads.sourceforge.net/project/swig/swig/swig-#{SWIG_VERSION}/#{swig_filename}"
  end
  FileUtils.ln_s(swig_download_path, swig_filename)
  system! "tar -zxsf swig-#{SWIG_VERSION}.tar.gz"
  FileUtils.chdir("swig-#{SWIG_VERSION}")

  # Requirement: pcre.
  if not pcre_installed? then
    install_pcre
  end

  # By using $PROJECT_ROOT, swig will be installed into the bin folder.
  # This is so the executables can be specified in the gemspec.
  # TODO: clean clean previous configures
  system! "./configure --prefix=#{PROJECT_ROOT}"

  processors = Parallel.processor_count
  if processors > 1
    system! "make -j#{processors}"
  else
    system! 'make'
  end
end

def install_swig
  system! 'make install'
end

task :build_swig do
  build_swig
  install_swig
  install_manpages('/usr/local')
  FileUtils.chdir(PWD)
end

